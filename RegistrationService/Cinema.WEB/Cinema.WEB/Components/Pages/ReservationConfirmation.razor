@page "/ReservationConfirmation/{ReservationId:guid}"
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject Cinema.Common.HttpClients.ReservationServiceHttpClient reservationServiceClient
@inject Cinema.Common.HttpClients.MovieServiceHttpClient movieServiceClient
@inject Cinema.Common.HttpClients.CinemaServiceHttpClient cinemaServiceClient


<PageTitle>ReservationConfirmation</PageTitle>

<div class="container">
    <h1>KINO</h1>
    <h3>POTVRZENÍ REZERVACE</h3>

    <div class="reservation-box">
        <div class="reservation-details">
            <div class="movie-title">@MovieName</div>
            <div class="seat-info">
                <strong>SEDADLA:</strong> @FormattedSeats
            </div>
            <div class="seat-info">
                <strong>EMAIL:</strong> @UserEmail
            </div>

        </div>

        <button class="reserve-button" @onclick="ConfirmReservationFix" disabled="@IsReservationDisabled">
            ZÁVAZNĚ OBJEDNAT
        </button>

        @if (ShowSuccessMessage)
        {
            <div class="alert alert-success mt-3">
                Rezervace potvrzena!
            </div>

            <button class="btn btn-success mt-2" @onclick="@(() => Navigation.NavigateTo("/"))">
                Zpět na hlavní stránku
            </button>
        }
    </div>

</div>

@code {
    [Parameter]
    public Guid ReservationId { get; set; }

    private string MovieName = null;
    private string FormattedSeats { get; set; } = "Žádné sedadlo";
    private string UserEmail { get; set; } = "";
    private bool IsReservationDisabled => string.IsNullOrWhiteSpace(UserEmail);
    private List<string> seatDetails = new();
    private bool ShowSuccessMessage { get; set; } = false;

    protected async override Task OnInitializedAsync()
    {
        var reservation = await reservationServiceClient.GetReservationById(ReservationId);
        var projection = await movieServiceClient.GetProjectionById(reservation.ProjectionId);

        var movie = await movieServiceClient.GetMovieById(projection.MovieId);
        var MovieName = movie.Title;

        foreach (var item in reservation.SeatId)
        {
            seatDetails.Add(await cinemaServiceClient.GetSeatInfo(item));
        }
        FormattedSeats = string.Join(" | ", seatDetails);

        var user = await reservationServiceClient.GetUserById(reservation.UserId);

        UserEmail = user.Email;
    }

    private async Task ConfirmReservationFix()
    {
    }
}
